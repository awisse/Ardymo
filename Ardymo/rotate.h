/* vim: ts=2:sts=2:expandtab:ft=cpp
 *
 * Rotation matrix for angles from 0 to 45 degrees.
 * For starters, we stop at 45 degrees given that all the other values can be deduced.
 * For \frac\pi{2} > \alpha > \frac\pi{4}, we have
 * \cos(\alpha) = \sin(\frac\pi{2} - \alpha)
 * \sin(\alpha) = \cos(\frac\pi{2} - \alpha)
 * For \pi > \alpha > \frac\pi{2}, we have
 * \cos(\alpha) = -\cos(\pi - \alpha)
 * \sin(\alpha) = \sin(\pi - \alpha)
 * For 2\pi > \alpha > \pi{2}, we have
 * \cos(\alpha) = \cos(2\pi - \alpha)
 * \sin(\alpha) = -\sin(2\pi - \alpha)
 */
#pragma once

#include "defines.h"

// Number of angles in the matrix
#define ANGLES 46

typedef struct {
  float cos;
  float sin;
} rotn;

rotn get_rotn(int16_t angle);

const PROGMEM rotn Omega[ANGLES] = {
{1.00000000,0.00000000},
{0.99984771,0.01745241},
{0.99939084,0.03489950},
{0.99862951,0.05233596},
{0.99756408,0.06975647},
{0.99619472,0.08715574},
{0.99452192,0.10452846},
{0.99254614,0.12186935},
{0.99026805,0.13917311},
{0.98768836,0.15643448},
{0.98480773,0.17364818},
{0.98162717,0.19080900},
{0.97814763,0.20791170},
{0.97437006,0.22495106},
{0.97029573,0.24192190},
{0.96592581,0.25881904},
{0.96126169,0.27563736},
{0.95630479,0.29237169},
{0.95105654,0.30901700},
{0.94551855,0.32556817},
{0.93969262,0.34202012},
{0.93358040,0.35836795},
{0.92718387,0.37460661},
{0.92050487,0.39073113},
{0.91354543,0.40673664},
{0.90630776,0.42261827},
{0.89879405,0.43837115},
{0.89100653,0.45399052},
{0.88294756,0.46947157},
{0.87461972,0.48480961},
{0.86602539,0.50000000},
{0.85716730,0.51503807},
{0.84804809,0.52991927},
{0.83867055,0.54463905},
{0.82903761,0.55919290},
{0.81915206,0.57357645},
{0.80901700,0.58778524},
{0.79863554,0.60181499},
{0.78801078,0.61566150},
{0.77714592,0.62932038},
{0.76604444,0.64278758},
{0.75470960,0.65605903},
{0.74314481,0.66913062},
{0.73135370,0.68199837},
{0.71933979,0.69465840},
{0.70710677,0.70710677}
};
