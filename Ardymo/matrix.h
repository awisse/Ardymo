/* vim: ts=2:sts=2:expandtab
 *
 * Rotation matrix for angles from 0 to 45 degrees.
 * For starters, we stop at 45 degrees given that all the other values can be deduced.
 * For \frac\pi{2} > \alpha > \frac\pi{4}, we have
 * \cos(\alpha) = \sin(\frac\pi{2} - \alpha)
 * \sin(\alpha) = \cos(\frac\pi{2} - \alpha)
 * For \pi > \alpha > \frac\pi{2}, we have
 * \cos(\alpha) = -\cos(\pi - \alpha)
 * \sin(\alpha) = \sin(\pi - \alpha)
 * For 2\pi > \alpha > \pi{2}, we have
 * \cos(\alpha) = \cos(2\pi - \alpha)
 * \sin(\alpha) = -\sin(2\pi - \alpha)
 */
#pragma once

#include "defines.h"

// Number of angles in the matrix
#define ANGLES 46

typedef struct {
  float cos;
  float sin;
} rotn;

const PROGMEM rotn Omega[ANGLES] = {
{ 1, 0 },
{ 0.9998477, 0.0174524 },
{ 0.9993908, 0.0348995 },
{ 0.9986295, 0.052336 },
{ 0.9975641, 0.0697565 },
{ 0.9961947, 0.0871557 },
{ 0.9945219, 0.1045285 },
{ 0.9925462, 0.1218693 },
{ 0.9902681, 0.1391731 },
{ 0.9876883, 0.1564345 },
{ 0.9848078, 0.1736482 },
{ 0.9816272, 0.190809 },
{ 0.9781476, 0.2079117 },
{ 0.9743701, 0.2249511 },
{ 0.9702957, 0.2419219 },
{ 0.9659258, 0.258819 },
{ 0.9612617, 0.2756374 },
{ 0.9563048, 0.2923717 },
{ 0.9510565, 0.309017 },
{ 0.9455186, 0.3255682 },
{ 0.9396926, 0.3420201 },
{ 0.9335804, 0.3583679 },
{ 0.9271839, 0.3746066 },
{ 0.9205049, 0.3907311 },
{ 0.9135455, 0.4067366 },
{ 0.9063078, 0.4226183 },
{ 0.898794, 0.4383711 },
{ 0.8910065, 0.4539905 },
{ 0.8829476, 0.4694716 },
{ 0.8746197, 0.4848096 },
{ 0.8660254, 0.5 },
{ 0.8571673, 0.5150381 },
{ 0.8480481, 0.5299193 },
{ 0.8386706, 0.544639 },
{ 0.8290376, 0.5591929 },
{ 0.819152, 0.5735764 },
{ 0.809017, 0.5877853 },
{ 0.7986355, 0.601815 },
{ 0.7880108, 0.6156615 },
{ 0.777146, 0.6293204 },
{ 0.7660444, 0.6427876 },
{ 0.7547096, 0.656059 },
{ 0.7431448, 0.6691306 },
{ 0.7313537, 0.6819984 },
{ 0.7193398, 0.6946584 },
{ 0.7071068, 0.7071068 }
};
